{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahim/Desktop/www/chakra-ui-pro-authentication-providers/src/components/atoms/PasswordField.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Flex, FormControl, FormLabel, IconButton, Input, InputGroup, InputRightElement, useDisclosure, useMergeRefs, useColorModeValue as mode } from '@chakra-ui/react';\nimport * as React from 'react';\nimport { HiEye, HiEyeOff } from 'react-icons/hi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordField = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    isOpen,\n    onToggle\n  } = useDisclosure();\n  const inputRef = React.useRef(null);\n  const mergeRef = useMergeRefs(inputRef, ref);\n\n  const onClickReveal = () => {\n    onToggle();\n    const input = inputRef.current;\n\n    if (input) {\n      input.focus({\n        preventScroll: true\n      });\n      const length = input.value.length * 2;\n      requestAnimationFrame(() => {\n        input.setSelectionRange(length, length);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    id: \"password\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        as: \"a\",\n        color: mode('blue.600', 'blue.200'),\n        fontWeight: \"semibold\",\n        fontSize: \"sm\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(InputRightElement, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          bg: \"transparent !important\",\n          variant: \"ghost\",\n          \"aria-label\": isOpen ? 'Mask password' : 'Reveal password',\n          icon: isOpen ? /*#__PURE__*/_jsxDEV(HiEyeOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(HiEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }, this),\n          onClick: onClickReveal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: mergeRef,\n        name: \"password\",\n        type: isOpen ? 'text' : 'password',\n        autoComplete: \"current-password\",\n        required: true,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}, \"y4C3Qwan9zmlzFaMIdGcqe/ukXk=\", false, function () {\n  return [useDisclosure, useMergeRefs];\n}));\n_c2 = PasswordField;\nPasswordField.displayName = 'PasswordField';\nexport default PasswordField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PasswordField$React.forwardRef\");\n$RefreshReg$(_c2, \"PasswordField\");","map":{"version":3,"sources":["/Users/ibrahim/Desktop/www/chakra-ui-pro-authentication-providers/src/components/atoms/PasswordField.tsx"],"names":["Box","Flex","FormControl","FormLabel","IconButton","Input","InputGroup","InputRightElement","useDisclosure","useMergeRefs","useColorModeValue","mode","React","HiEye","HiEyeOff","PasswordField","forwardRef","props","ref","isOpen","onToggle","inputRef","useRef","mergeRef","onClickReveal","input","current","focus","preventScroll","length","value","requestAnimationFrame","setSelectionRange","displayName"],"mappings":";;;AAAA,SACIA,GADJ,EAEIC,IAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,UALJ,EAMIC,KANJ,EAOIC,UAPJ,EASIC,iBATJ,EAUIC,aAVJ,EAWIC,YAXJ,EAYIC,iBAAiB,IAAIC,IAZzB,QAaS,kBAbT;AAcE,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,gBAAhC;;AAED,MAAMC,aAAa,gBAAGH,KAAK,CAACI,UAAN,SAA+C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAClF,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBZ,aAAa,EAA1C;AACA,QAAMa,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAA+B,IAA/B,CAAjB;AAEA,QAAMC,QAAQ,GAAGd,YAAY,CAACY,QAAD,EAAWH,GAAX,CAA7B;;AAEA,QAAMM,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,QAAQ;AACR,UAAMK,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;;AACA,QAAID,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACE,KAAN,CAAY;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAZ;AACA,YAAMC,MAAM,GAAGJ,KAAK,CAACK,KAAN,CAAYD,MAAZ,GAAqB,CAApC;AACAE,MAAAA,qBAAqB,CAAC,MAAM;AAC1BN,QAAAA,KAAK,CAACO,iBAAN,CAAwBH,MAAxB,EAAgCA,MAAhC;AACD,OAFoB,CAArB;AAGD;AACF,GAVD;;AAYA,sBACE,QAAC,WAAD;AAAa,IAAA,EAAE,EAAC,UAAhB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,eAAd;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,KAAK,EAAElB,IAAI,CAAC,UAAD,EAAa,UAAb,CAAvB;AAAiD,QAAA,UAAU,EAAC,UAA5D;AAAuE,QAAA,QAAQ,EAAC,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,UAAD;AAAA,8BACE,QAAC,iBAAD;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,EAAE,EAAC,wBADL;AAEE,UAAA,OAAO,EAAC,OAFV;AAGE,wBAAYQ,MAAM,GAAG,eAAH,GAAqB,iBAHzC;AAIE,UAAA,IAAI,EAAEA,MAAM,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAkB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAJhC;AAKE,UAAA,OAAO,EAAEK;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,KAAD;AACE,QAAA,GAAG,EAAED,QADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAEJ,MAAM,GAAG,MAAH,GAAY,UAH1B;AAIE,QAAA,YAAY,EAAC,kBAJf;AAKE,QAAA,QAAQ,MALV;AAAA,WAMMF;AANN;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA/CoB;AAAA,UACUT,aADV,EAIFC,YAJE;AAAA,GAAtB;MAAMM,a;AAiDLA,aAAa,CAACkB,WAAd,GAA4B,eAA5B;AAEF,eAAelB,aAAf","sourcesContent":["import {\n    Box,\n    Flex,\n    FormControl,\n    FormLabel,\n    IconButton,\n    Input,\n    InputGroup,\n    InputProps,\n    InputRightElement,\n    useDisclosure,\n    useMergeRefs,\n    useColorModeValue as mode,\n  } from '@chakra-ui/react'\n  import * as React from 'react'\n  import { HiEye, HiEyeOff } from 'react-icons/hi'\n  \n const PasswordField = React.forwardRef<HTMLInputElement, InputProps>((props, ref) => {\n    const { isOpen, onToggle } = useDisclosure()\n    const inputRef = React.useRef<HTMLInputElement>(null)\n  \n    const mergeRef = useMergeRefs(inputRef, ref)\n  \n    const onClickReveal = () => {\n      onToggle()\n      const input = inputRef.current\n      if (input) {\n        input.focus({ preventScroll: true })\n        const length = input.value.length * 2\n        requestAnimationFrame(() => {\n          input.setSelectionRange(length, length)\n        })\n      }\n    }\n  \n    return (\n      <FormControl id=\"password\">\n        <Flex justify=\"space-between\">\n          <FormLabel>Password</FormLabel>\n          <Box as=\"a\" color={mode('blue.600', 'blue.200')} fontWeight=\"semibold\" fontSize=\"sm\">\n            Forgot Password?\n          </Box>\n        </Flex>\n        <InputGroup>\n          <InputRightElement>\n            <IconButton\n              bg=\"transparent !important\"\n              variant=\"ghost\"\n              aria-label={isOpen ? 'Mask password' : 'Reveal password'}\n              icon={isOpen ? <HiEyeOff /> : <HiEye />}\n              onClick={onClickReveal}\n            />\n          </InputRightElement>\n          <Input\n            ref={mergeRef}\n            name=\"password\"\n            type={isOpen ? 'text' : 'password'}\n            autoComplete=\"current-password\"\n            required\n            {...props}\n          />\n        </InputGroup>\n      </FormControl>\n    )\n  })\n  \n  PasswordField.displayName = 'PasswordField'\n  \nexport default PasswordField;"]},"metadata":{},"sourceType":"module"}